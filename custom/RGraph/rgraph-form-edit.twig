{#
/*
 * Copyright (C) 2017 Lukas Zurschmiede
 * (${FILE_NAME})
 */
#}

{% extends "form-base.twig" %}
{% import "forms.twig" as forms %}

{% block formTitle %}
    {% trans "Edit Graph Page" %}
{% endblock %}

{% block formButtons %}
    {% trans "Cancel" %}, XiboDialogClose()
    {% trans "Save" %}, $("#rgraphEditForm").submit()
{% endblock %}

{% block formFieldActions %}
    [{
      "field": "method", "trigger": "init",
      "operation": "equals", "value": "methodPost",
      "actions": { ".postData": { "display": "block" } }
    },{
      "field": "method", "trigger": "init",
      "operation": "not", "value": "methodPost",
      "actions": { ".postData": { "display": "none" } }
    },{
      "field": "method", "trigger": "change",
      "operation": "equals", "value": "methodPost",
      "actions": { ".postData": { "display": "block" } }
    },{
      "field": "method", "trigger": "change",
      "operation": "not", "value": "methodPost",
      "actions": { ".postData": { "display": "none" } }
    },
    {
      "field": "method2", "trigger": "init",
      "operation": "equals", "value": "methodPost",
      "actions": { ".postData2": { "display": "block" } }
    },{
      "field": "method2", "trigger": "init",
      "operation": "not", "value": "methodPost",
      "actions": { ".postData2": { "display": "none" } }
    },{
      "field": "method2", "trigger": "change",
      "operation": "equals", "value": "methodPost",
      "actions": { ".postData2": { "display": "block" } }
    },{
      "field": "method2", "trigger": "change",
      "operation": "not", "value": "methodPost",
      "actions": { ".postData2": { "display": "none" } }
    },
    {
      "field": "useDuration", "trigger": "init",
      "operation": "is:checked", "value": false,
      "actions": { ".duration-fields": { "display": "none" } }
    },{
      "field": "useDuration", "trigger": "init",
      "operation": "is:checked", "value": true,
      "actions": { ".duration-fields": { "display": "block" } }
    },{
      "field": "useDuration", "trigger": "change",
      "operation": "is:checked", "value": false,
      "actions": { ".duration-fields": { "display": "none" } }
    },{
      "field": "useDuration", "trigger": "change",
      "operation": "is:checked", "value": true,
      "actions": { ".duration-fields": { "display": "block" } }
    },
    {
      "field": "showLegend", "trigger": "init",
      "operation": "is:checked", "value": false,
      "actions": {
        ".legendCenter": { "display": "none" },
        ".legendX": { "display": "none" },
        ".legendY": { "display": "none" },
        ".legendRight": { "display": "none" },
        ".legendBottom": { "display": "none" }
      }
    },{
      "field": "showLegend", "trigger": "init",
      "operation": "is:checked", "value": true,
      "actions": {
        ".legendCenter": { "display": "block" },
        ".legendX": { "display": "block" },
        ".legendY": { "display": "block" },
        ".legendRight": { "display": "block" },
        ".legendBottom": { "display": "block" }
      }
    },{
      "field": "showLegend", "trigger": "change",
      "operation": "is:checked", "value": false,
      "actions": {
        ".legendCenter": { "display": "none" },
        ".legendX": { "display": "none" },
        ".legendY": { "display": "none" },
        ".legendRight": { "display": "none" },
        ".legendBottom": { "display": "none" }
      }
    },{
      "field": "showLegend", "trigger": "change",
      "operation": "is:checked", "value": true,
      "actions": {
        ".legendCenter": { "display": "block" },
        ".legendX": { "display": "block" },
        ".legendY": { "display": "block" },
        ".legendRight": { "display": "block" },
        ".legendBottom": { "display": "block" }
      }
    },
    {
      "field": "legendCenter", "trigger": "init",
      "operation": "is:checked", "value": true,
      "actions": {
        ".legendX": { "display": "none" },
        ".legendRight": { "display": "none" }
      }
    },{
      "field": "legendCenter", "trigger": "init",
      "operation": "is:checked", "value": false,
      "actions": {
        ".legendX": { "display": "block" },
        ".legendRight": { "display": "block" }
      }
    },{
      "field": "legendCenter", "trigger": "change",
      "operation": "is:checked", "value": true,
      "actions": {
        ".legendX": { "display": "none" },
        ".legendRight": { "display": "none" }
      }
    },{
      "field": "legendCenter", "trigger": "change",
      "operation": "is:checked", "value": false,
      "actions": {
        ".legendX": { "display": "block" },
        ".legendRight": { "display": "block" }
      }
    },
    {
      "field": "dataSource", "trigger": "init",
      "operation": "equals", "value": "json",
      "actions": {
        ".tab_dataset": { "display": "none" },
        ".tab_json": { "display": "block" }
      }
    },{
      "field": "dataSource", "trigger": "init",
      "operation": "equals", "value": "dataset",
      "actions": {
        ".tab_dataset": { "display": "block" },
        ".tab_json": { "display": "none" }
      }
    },{
      "field": "dataSource", "trigger": "change",
      "operation": "equals", "value": "json",
      "actions": {
        ".tab_dataset": { "display": "none" },
        ".tab_json": { "display": "block" }
      }
    },{
      "field": "dataSource", "trigger": "change",
      "operation": "equals", "value": "dataset",
      "actions": {
        ".tab_dataset": { "display": "block" },
        ".tab_json": { "display": "none" }
      }
    }
    ]
{% endblock %}

{% block formHtml %}
    <div class="row">
        <div class="col-md-12">
            <ul class="nav nav-tabs" role="tablist">
                <li class="active"><a href="#general" role="tab" data-toggle="tab"><span>{% trans "General" %}</span></a></li>
                <li><a href="#data" role="tab" data-toggle="tab" data-enlarge="1"><span>{% trans "Data" %}</span></a></li>
                <li class="tab_json"><a href="#json" role="tab" data-toggle="tab" data-enlarge="1"><span>{% trans "JSON" %}</span></a></li>
                <li class="tab_dataset"><a href="#dataset" role="tab" data-toggle="tab" data-enlarge="1"><span>{% trans "Dataset" %}</span></a></li>
                <li><a href="#effectTab" role="tab" data-toggle="tab"><span>{% trans "Effect" %}</span></a></li>
                <li><a href="#advanced" role="tab" data-toggle="tab"><span>{% trans "Advanced" %}</span></a></li>
            </ul>
            <form id="rgraphEditForm" class="XiboForm form-horizontal" method="put" action="{{ urlFor("module.widget.edit", {id: module.widget.widgetId}) }}">
                <div class="tab-content">
                    <div class="tab-pane active" id="general">
                        {% set helpText %}{% trans "An optional name for this widget" %}{% endset %}
                        {% set title %}{% trans "Name" %}{% endset %}
                        {{ forms.input("name", title, module.getOption("name"), helpText) }}

                        {% set title %}{% trans "Set a duration?" %}{% endset %}
                        {% set helpText %}{% trans "Select to provide a specific duration for this Widget" %}{% endset %}
                        {{ forms.checkbox("useDuration", title, module.getUseDuration(), helpText) }}

                        {% set title %}{% trans "Duration" %}{% endset %}
                        {% set helpText %}{% trans "The duration in seconds this should be displayed" %}{% endset %}
                        {{ forms.number("duration", title, module.getDuration(), helpText, "duration-fields", "required") }}

                        {% set title %}{% trans "Graph Type" %}{% endset %}
                        {% set helpText %}{% trans "What type of Graph should be used." %}{% endset %}
                        {% set bar_chart %}{% trans "Bar chart" %}{% endset %}
                        {% set line_chart %}{% trans "Line chart" %}{% endset %}
                        {% set horizontal_bar_chart %}{% trans "Horizontal Bar Chart" %}{% endset %}
                        {% set pie_chart %}{% trans "Pie Chart" %}{% endset %}
                        {% set radar_chart %}{% trans "Radar Chart" %}{% endset %}
                        {% set circular_progress %}{% trans "Semi Circular Progress Chart" %}{% endset %}
                        {% set vertical_progress %}{% trans "Vertical Progress Chart" %}{% endset %}
                        {% set horizontal_progress %}{% trans "Horizontal Progress Chart" %}{% endset %}
                        {% set waterfall_chart %}{% trans "Waterfall Chart" %}{% endset %}
                        {% set scatter_chart %}{% trans "Scatter Chart" %}{% endset %}
                        {% set options = [
                        { typeid: "line_chart", type: line_chart },
                        { typeid: "pie_chart", type: pie_chart },
                        { typeid: "bar_chart", type: bar_chart },
                        { typeid: "horizontal_bar_chart", type: horizontal_bar_chart },
                        { typeid: "waterfall_chart", type: waterfall_chart },
                        { typeid: "circular_progress", type: circular_progress },
                        { typeid: "vertical_progress", type: vertical_progress },
                        { typeid: "horizontal_progress", type: horizontal_progress },
                        { typeid: "radar_chart", type: radar_chart },
                        { typeid: "scatter_chart", type: scatter_chart }
                        ] %}
                        {{ forms.dropdown("graphType", "single", title, module.getOption("graphType"), options, "typeid", "type", helpText) }}
                        
                        {% set title %}{% trans "Background Color" %}{% endset %}
                        {% set helpText %}{% trans "The selected effect works best with a background color. Optionally add one here." %}{% endset %}
                        {{ forms.input("backgroundColor", title, module.getOption("backgroundColor"), helpText, "background-color-group") }}
                    </div>

                    <div class="tab-pane" id="data">
                        {% set title %}{% trans "Data-Source" %}{% endset %}
                        {% set helpText %}{% trans "Where to gather the data." %}{% endset %}
                        {% set json %}{% trans "JSON RPC-Calls" %}{% endset %}
                        {% set dataset %}{% trans "Internal Dataset" %}{% endset %}
                        {% set options = [
                        { typeid: "json", type: json },
                        { typeid: "dataset", type: dataset }
                        ] %}
                        {{ forms.dropdown("dataSource", "single", title, module.getOption("dataSource"), options, "typeid", "type", helpText) }}
                        
                        {% set title %}{% trans "Optional JavaScript to prepare the data." %}{% endset %}
                        {{ forms.textarea("dataJavaScript", "", module.getRawNode("dataJavaScript"), title, "", "", 10) }}
                    </div>
                    
                    <div class="tab-pane" id="json">
                        {% set title %}{% trans "URI" %}{% endset %}
                        {% set helpText %}{% trans "Enter the URL to capture the data from." %}{% endset %}
                        {{ forms.input("uri", title, module.getOption("uri")|url_decode, helpText, "", "required") }}
                        
                        {% set methodSelect %}{% trans "Select..." %}{% endset %}
                        {% set methodGet %}{% trans "GET" %}{% endset %}
                        {% set methodPost %}{% trans "POST" %}{% endset %}
                        {% set options = [
                        { methodid: "methodSelect", method: methodSelect},
                        { methodid: "methodGet", method: methodGet},
                        { methodid: "methodPost", method: methodPost}
                        ] %}
                        {% set title %}{% trans "Method" %}{% endset %}
                        {% set helpText %}{% trans "Select the method to use for grabbing the data." %}{% endset %}
                        {{ forms.dropdown("method", "single", title, module.getOption("method", "methodGet"), options, "methodid", "method", helpText) }}
                        
                        {% set title %}{% trans "POST Data" %}{% endset %}
                        {% set helpText %}{% trans "Use this field to enter the POST Data to send when using Method POST" %}{% endset %}
                        {{ forms.textarea("postData", "", module.getRawNode("postData"), title, "postData", "", 10) }}
                        
                        
                        {% set title %}{% trans "<h4>Second RPC</h4>" %}{% endset %}
                        {{ forms.raw(title, "uri2") }}
                        
                        {% set messageText %}{% trans "This is the second Remote-Call what can use data from from the first JSON-Response to be sent. For Example you can first request a Filter and then use a special field from the resonse to access the data from this filter. The values from the first Response can be used in the 'Second URI' and also in the 'Second POST Data'.</p><p>If for example the first Call results in a Data-Structure like this: <code>Object { first: [val1, val2], second: { first: Hello, second: World } }</code> and so on, you can use <code>${first[0]}</code> for 'val1' or <code>${second.first} ${second.second}</code> for a 'Hello World' in the URI and Post-Data." %}{% endset %}
                        {{ forms.message(messageText, "uri2") }}
                        
                        {% set title %}{% trans "Second URI" %}{% endset %}
                        {% set helpText %}{% trans "Enter a second URL to capture the data from." %}{% endset %}
                        {{ forms.input("uri2", title, module.getOption("uri2")|url_decode) }}
                        
                        {% set title %}{% trans "Second Method" %}{% endset %}
                        {{ forms.dropdown("method2", "single", title, module.getOption("method2", "methodSelect"), options, "methodid", "method") }}
                        
                        {% set title %}{% trans "Second POST Data" %}{% endset %}
                        {{ forms.textarea("postData2", "", module.getRawNode("postData2"), title, "postData2", "", 10) }}
                    </div>
                    
                    <div class="tab-pane" id="dataset">
                        {% set title %}{% trans "DataSet" %}{% endset %}
                        {% set helpText %}{% trans "Please select the DataSet to use as a source of data for this view." %}{% endset %}
                        {{ forms.dropdown("dataSetId", "single", title, "", module.dataSets(), "dataSetId", "dataSet", helpText, "dataset-fields") }}

                        {% set title %}{% trans "Label Column" %}{% endset %}
                        {% set helpText %}{% trans "Enter the name of the Column where the Labels are stored (X-Axis, Horizontally)." %}{% endset %}
                        {{ forms.input("labelColumn", title, module.getOption("labelColumn"), helpText) }}
                    </div>

                    <div class="tab-pane" id="effectTab">
                        {% set title %}{% trans "Effect" %}{% endset %}
                        {% set helpText %}{% trans "Please select the effect that will be used to transition between items." %}{% endset %}
                        {% set noneOption %}{% trans "None" %}{% endset %}
                        {% set fade %}{% trans "Fade" %}{% endset %}
                        {% set fadeout %}{% trans "Fade Out" %}{% endset %}
                        {% set scrollHorz %}{% trans "Scroll Horizontal" %}{% endset %}
                        {% set scrollVert %}{% trans "Scroll Vertical" %}{% endset %}
                        {% set flipHorz %}{% trans "Flip Horizontal" %}{% endset %}
                        {% set flipVert %}{% trans "Flip Vertical" %}{% endset %}
                        {% set shuffle %}{% trans "Shuffle" %}{% endset %}
                        {% set tileSlide %}{% trans "Tile Slide" %}{% endset %}
                        {% set tileBlind %}{% trans "Tile Blind" %}{% endset %}
                        {% set options = [
                        { effectid: "noAnim", effect: noneOption },
                        { effectid: "fade", effect: fade },
                        { effectid: "fadeout", effect: fadeout},
                        { effectid: "scrollHorz", effect: scrollHorz},
                        { effectid: "scrollVert", effect: scrollVert},
                        { effectid: "flipHorz", effect: flipHorz},
                        { effectid: "flipVert", effect: flipVert},
                        { effectid: "shuffle", effect: shuffle},
                        { effectid: "tileSlide", effect: tileSlide},
                        { effectid: "tileBlind", effect: tileBlind}
                        ] %}
                        {{ forms.dropdown("effect", "single", title, module.getOption("effect"), options, "effectid", "effect", helpText) }}

                        {% set title %}{% trans "Speed" %}{% endset %}
                        {% set helpText %}{% trans "The transition speed of the selected effect in milliseconds (normal = 1000)." %}{% endset %}
                        {{ forms.number("speed", title, module.getOption("speed"), helpText, "effect-controls") }}
                    </div>

                    <div class="tab-pane" id="advanced">
                        {% set title %}{% trans "Show legend?" %}{% endset %}
                        {% set helpText %}{% trans "Should a legend be shown? For the labels you may enter a special JavaScript Method below." %}{% endset %}
                        {{ forms.checkbox("showLegend", title, module.getOption("showLegend"), helpText) }}
                        
                        {% set title %}{% trans "Horizontally centered" %}{% endset %}
                        {% set helpText %}{% trans "Center the legend horizontally" %}{% endset %}
                        {{ forms.checkbox("legendCenter", title, module.getOption("legendCenter"), helpText, "legendCenter") }}
                        
                        {% set title %}{% trans "Horizontal (in px)" %}{% endset %}
                        {{ forms.number("legendX", title, module.getOption("legendX"), "", "legendX") }}
                        
                        {% set title %}{% trans "From right" %}{% endset %}
                        {{ forms.checkbox("legendRight", title, module.getOption("legendRight"), "", "legendRight") }}
                        
                        {% set title %}{% trans "Vertical (in px)" %}{% endset %}
                        {{ forms.number("legendY", title, module.getOption("legendY"), "", "legendY") }}
                        
                        {% set title %}{% trans "From bottom" %}{% endset %}
                        {{ forms.checkbox("legendBottom", title, module.getOption("legendBottom"), "", "legendBottom") }}
                        
                        {% set title %}{% trans "Optional JavaScript to prepare the labels on the Legend." %}{% endset %}
                        {{ forms.textarea("legendJavaScript", "", module.getRawNode("legendJavaScript"), title, "", "", 10) }}

                    </div>
                </div>
            </form>
        </div>
    </div>
{% endblock %}
